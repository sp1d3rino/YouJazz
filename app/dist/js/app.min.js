"use strict";angular.module("yeomanApp",["base64","ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngMaterial","ngCookies","angular-cookie-law","ngYoutubeEmbed"]).config(function($routeProvider){$routeProvider.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl",controllerAs:"login"}).when("/signup",{templateUrl:"views/signup.html",controller:"SignupCtrl",controllerAs:"signup"}).otherwise({redirectTo:"/"})}).controller("IndexController",["$scope","$rootScope","$cookies",function($scope,$rootScope,$cookies){$rootScope.avatars=[{avatarId:"guitar",svgImage:"images/svg/guitar1.svg"},{avatarId:"piano",svgImage:"images/svg/piano.svg"},{avatarId:"drum",svgImage:"images/svg/drum.svg"},{avatarId:"dbass",svgImage:"images/svg/dbass.svg"},{avatarId:"trumpet",svgImage:"images/svg/trumpet.svg"},{avatarId:"violin",svgImage:"images/svg/violin.svg"},{avatarId:"sax",svgImage:"images/svg/sax.svg"},{avatarId:"jguitar",svgImage:"images/svg/jguitar.svg"}],$scope.logout=function(){$cookies.remove("youjazz_user"),$cookies.remove("youjazz_basic_auth"),$cookies.remove("youjazz_user_avatar"),$rootScope.userSignedIn=null,$rootScope.basicAuth=null,$rootScope.avatar=null}}]),angular.module("yeomanApp").controller("AboutCtrl",["$scope","$http",function($scope,$http){$scope.formData={},$scope.selectedId={},$http.get("/api/todos").then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to GET api");$scope.todos=response.data,console.log(response.status)}),$scope.createTodo=function(){$http.post("/api/todos",$scope.formData).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to POST api");$scope.formData={},$scope.todos=response.data,console.log(JSON.stringify(response.data,null,4))})},$scope.updateTodo=function(id){console.log("update start!!"),$http.put("/api/todos/"+id,$scope.formData).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to PUT api");$scope.formData={},$scope.todos=response.data,console.log(JSON.stringify(response.data,null,4))})},$scope.deleteTodo=function(id){console.log("delete start!!"),$http.delete("/api/todos/"+id).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to DELETE api");$scope.todos=response.data,console.log(response.data)})}}]),angular.module("yeomanApp").controller("LoginCtrl",["$scope","$rootScope","$http","$mdToast","$base64","$cookies","$location",function($scope,$rootScope,$http,$mdToast,$base64,$cookies,$location){$scope.formData={},$scope.formData.username="",$scope.formData.password="",$scope.showToast1=function(msg){$mdToast.show($mdToast.simple().textContent(msg).hideDelay(3e3))},$scope.loginUser=function(){console.log("loginUser function start");var auth=$base64.encode(angular.lowercase($scope.formData.username)+":"+$scope.formData.password);$http.defaults.headers.common.Authorization="Basic "+auth,$rootScope.basicAuth=auth,$http.get("/api/users/"+$scope.formData.username).then(function(response){console.log("response status:"+JSON.stringify(response.status));var res=response.data[0];$rootScope.userSignedIn=$scope.formData.username,$rootScope.avatar=res.avatar;var login_today=new Date,login_expired=new Date(login_today);login_expired.setDate(login_today.getDate()+1),$cookies.put("youjazz_user",$rootScope.userSignedIn,{expires:login_expired}),$cookies.put("youjazz_basic_auth",$rootScope.basicAuth,{expires:login_expired}),$cookies.put("youjazz_user_avatar",res.avatar,{expires:login_expired}),$location.url("/")},function(response){console.log("error  response status:"+JSON.stringify(response.status)),$scope.showToast1("Log in failed! Please check username and password."),$rootScope.userSignedIn=null})}}]),angular.module("yeomanApp").controller("MainCtrl",["$scope","$rootScope","$http","$q","$cookies","$mdToast","$window","$mdDialog","$location",function($scope,$rootScope,$http,$q,$cookies,$mdToast,$window,$mdDialog,$location){var originatorEv;$scope.formData={},$scope.commentData={},$scope.youtubelink="https://www.youtube.com/watch?v=S3PvxnHNdoM",$scope.formData.numCol=0,$scope.formData.numRow=0,$scope.formData.tuneTitle="",$scope.formData.tuneAuthorName="",$scope.formData.comments="",$scope.formData.avatarSvg="",$scope.formData.vote=0,$scope.commentData.username="",$scope.commentData.text="",$scope.commentData.tuneId="",$scope.comments=[],$scope.selectedTune="",$scope.newTuneFlag=!1,$scope.barClipboard=null,$scope.currentGridType=null,$rootScope.userSignedIn=$cookies.get("youjazz_user"),$rootScope.basicAuth=$cookies.get("youjazz_basic_auth"),$rootScope.avatar=$cookies.get("youjazz_user_avatar"),angular.forEach($rootScope.avatars,function(item){item.avatarId==$rootScope.avatar&&($rootScope.avatarSvg=item.svgImage)}),$scope.isPrintButtonDisabled=function(){return void 0==$scope.formData._id||null==$scope.formData.tuneTitle||""==$scope.formData.tuneTitle||void 0==$scope.formData.tuneTitle||void 0==$scope.userSignedIn||null==$scope.userSignedIn||0==$scope.formData.grille.length&&0==$scope.formData.grille_intro.length&&0==$scope.formData.grille_outro.length},$scope.isDeleteButtonDisabled=function(){return void 0===$scope.formData._id||null==$scope.formData.tuneTitle||""==$scope.formData.tuneTitle||void 0==$scope.formData.tuneTitle||void 0==$scope.userSignedIn||null===$scope.userSignedIn||null!==$scope.formData.grilleAuthorName&&void 0!==$scope.formData.grilleAuthorName&&$scope.userSignedIn!==$scope.formData.grilleAuthorName},$scope.isSaveButtonDisabled=function(event){return $scope.newTuneFlag!==!0&&$scope.userSignedIn!==$scope.formData.grilleAuthorName||null==$scope.formData.tuneTitle||""==$scope.formData.tuneTitle||void 0==$scope.formData.tuneTitle||void 0==$scope.userSignedIn||null===$scope.userSignedIn||null!==$scope.formData.grilleAuthorName&&void 0!==$scope.formData.grilleAuthorName&&$scope.userSignedIn!==$scope.formData.grilleAuthorName},$scope.isBuildGridButtonDisabled=function(){return null==$scope.formData.tuneTitle||""==$scope.formData.tuneTitle||void 0==$scope.formData.tuneTitle||void 0==$scope.userSignedIn||null===$scope.userSignedIn||null!==$scope.formData.grilleAuthorName&&void 0!==$scope.formData.grilleAuthorName&&$scope.userSignedIn!==$scope.formData.grilleAuthorName},$scope.chords=[{chordId:1,chordName:"C"},{chordId:2,chordName:"D"},{chordId:3,chordName:"E"},{chordId:4,chordName:"F"},{chordId:5,chordName:"G"},{chordId:6,chordName:"A"},{chordId:7,chordName:"B"}],$scope.selected=0,$scope.symbSelected=0,$scope.cellSelected=null,$scope.select=function(index){$scope.cellSelected.cellValue.indexOf("%")>-1&&($scope.cellSelected.cellValue=""),$scope.selected=index,$scope.cellSelected.cellValue=$scope.cellSelected.cellValue.concat($scope.chords[index-1].chordName)},$scope.showToast1=function(msg){$mdToast.show($mdToast.simple().textContent(msg).hideDelay(3e3))},$scope.symbols=[{symbId:1,symbName:"#",symbKey:"#"},{symbId:2,symbName:"b",symbKey:"l"},{symbId:3,symbName:"/",symbKey:"/"},{symbId:4,symbName:"°",symbKey:"°"},{symbId:5,symbName:"Ø",symbKey:"."},{symbId:6,symbName:"∆",symbKey:"r"},{symbId:7,symbName:"Maj",symbKey:"j"},{symbId:8,symbName:"m",symbKey:"m"},{symbId:9,symbName:"-",symbKey:"-"},{symbId:10,symbName:"+",symbKey:"+"},{symbId:11,symbName:"5",symbKey:"5"},{symbId:12,symbName:"6",symbKey:"6"},{symbId:13,symbName:"7",symbKey:"7"},{symbId:14,symbName:"9",symbKey:"9"},{symbId:15,symbName:"11",symbKey:"1"},{symbId:16,symbName:"13",symbKey:"3"},{symbId:17,symbName:"%",symbKey:"%"},{symbId:18,symbName:",",symbKey:","},{symbId:19,symbName:" ",symbKey:"s"}],$scope.contains=function(a,obj){for(var r=a.length;r--;)for(var c=a[r].length;c--;)if(a[r][c]===obj)return!0;return!1},$scope.isFunctionKey=function(eventKey){var currentGrid=null,prova=$scope.contains($scope.formData.grille,$scope.cellSelected);console.log(prova),$scope.contains($scope.formData.grille,$scope.cellSelected)?currentGrid=$scope.formData.grille:$scope.contains($scope.formData.grille_intro,$scope.cellSelected)?currentGrid=$scope.formData.grille_intro:$scope.contains($scope.formData.grille_outro,$scope.cellSelected)&&(currentGrid=$scope.formData.grille_outro);var rId=$scope.cellSelected.cellId[0],cId=$scope.cellSelected.cellId[1],keyPressed=eventKey.originalEvent;if("Backspace"==keyPressed.key){eventKey.preventDefault();var str=$scope.cellSelected.cellValue;return str=str.substring(0,str.length-1),$scope.cellSelected.cellValue=str,!0}if("c"==keyPressed.key&&keyPressed.ctrlKey)return $scope.barClipboard=$scope.cellSelected.cellValue,!0;if("v"==keyPressed.key&&keyPressed.ctrlKey)return null!=$scope.barClipboard&&$scope.barClipboard.length>0&&($scope.cellSelected.cellValue=$scope.barClipboard),!0;if("ArrowUp"==keyPressed.key)rId>0&&rId--,$scope.cellSelected=currentGrid[rId][cId];else{if("ArrowDown"==keyPressed.key)return rId<currentGrid.length&&rId++,$scope.cellSelected=currentGrid[rId][cId],!0;if("ArrowRight"==keyPressed.key)return cId<currentGrid[0].length-1&&cId++,$scope.cellSelected=currentGrid[rId][cId],!0;if("ArrowLeft"==keyPressed.key)return cId>0&&cId--,$scope.cellSelected=currentGrid[rId][cId],!0}return!1},$scope.cellKeyPressed=function(eventKey){var keyPressed=eventKey.originalEvent.key;$scope.isFunctionKey(eventKey)||(angular.forEach($scope.chords,function(item){keyPressed.toUpperCase()==item.chordName&&$scope.select(item.chordId)}),angular.forEach($scope.symbols,function(item){keyPressed.toLowerCase()==item.symbKey&&$scope.selectSymb(item.symbId)}))},$scope.selectSymb=function(index){console.log(index),$scope.cellSelected.cellValue.indexOf("%")>-1&&($scope.cellSelected.cellValue=""),$scope.symbols[index-1].symbName.indexOf("%")>-1&&($scope.cellSelected.cellValue=""),$scope.symbSelected=index,$scope.cellSelected.cellValue=$scope.cellSelected.cellValue.concat($scope.symbols[index-1].symbName)},$scope.finalChord={chordName:""},$scope.resetChord=function(){$scope.finalChord.chordName=""},$scope.isEmptyChord=function(){return!$scope.finalChord||0===$scope.finalChord.length},$scope.resetGrid=function(){console.log("resetGrid "),$scope.selectedTune=null,$scope.formData._id=void 0,$scope.formData.grilleAuthorName=null,$scope.formData.grille=[],$scope.formData.grille_intro=[],$scope.formData.grille_outro=[],$scope.comments=[]},$scope.createG=function(gridType){"Intro"==gridType?$scope.createIntroGrid():"Chorus"==gridType?$scope.createGrid():"Outro"==gridType&&$scope.createOutroGrid()},$scope.createGrid=function(){if("0"==$scope.formData.numRow||"0"==$scope.formData.numCol)return void($scope.formData.grille=null);console.log("createGrid "+$scope.formData.numRow+"x"+$scope.formData.numCol);var rows=$scope.formData.numRow,cols=$scope.formData.numCol;$scope.formData.grille=new Array(rows);for(var i=0;i<rows;i++)$scope.formData.grille[i]=new Array(cols);for(var r=0;r<rows;r++)for(var c=0;c<cols;c++)$scope.formData.grille[r][c]={cellId:r.toString().concat(c.toString()),cellValue:"%"}},$scope.createIntroGrid=function(){if("0"==$scope.formData.numRow||"0"==$scope.formData.numCol)return void($scope.formData.grille_intro=null);console.log("createGrid Intro"+$scope.formData.numRow+"x"+$scope.formData.numCol);var rows=$scope.formData.numRow,cols=$scope.formData.numCol;$scope.formData.grille_intro=new Array(rows);for(var i=0;i<rows;i++)$scope.formData.grille_intro[i]=new Array(cols);for(var r=0;r<rows;r++)for(var c=0;c<cols;c++)$scope.formData.grille_intro[r][c]={cellId:r.toString().concat(c.toString()),cellValue:"%"}},$scope.createOutroGrid=function(){if("0"==$scope.formData.numRow||"0"==$scope.formData.numCol)return void($scope.formData.grille_outro=null);console.log("createGrid Outro "+$scope.formData.numRow+"x"+$scope.formData.numCol);var rows=$scope.formData.numRow,cols=$scope.formData.numCol;$scope.formData.grille_outro=new Array(rows);for(var i=0;i<rows;i++)$scope.formData.grille_outro[i]=new Array(cols);for(var r=0;r<rows;r++)for(var c=0;c<cols;c++)$scope.formData.grille_outro[r][c]={cellId:r.toString().concat(c.toString()),cellValue:"%"}},$scope.selectCell=function(cell){console.log(cell),$scope.cellSelected=cell},$scope.newTune=function(tTitle){$scope.resetGrid(),$scope.newTuneFlag=!0},$scope.postComment=function(){console.log("post comment "+$scope.commentData.text+"\nby "+$rootScope.userSignedIn),$http.defaults.headers.common.Authorization="Basic "+$scope.basicAuth,$scope.commentData.tuneId=$scope.selectedTune,$http.post("/api/comments",$scope.commentData).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to POST api");0==Object.keys($scope.comments).length?$scope.comments.push(response.data):$scope.comments.unshift(response.data),$scope.commentData.text=""})},$scope.getComments=function(tuneId){console.log("Get Comments for tuneId "+tuneId),$http.get("/api/comments/"+tuneId).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to GET api");console.log("reload comments"),$scope.comments=response.data})},$scope.voteThisTune=function(tuneId,updown){console.log(tuneId),$scope.formData.vote=updown,$http.defaults.headers.common.Authorization="Basic "+$scope.basicAuth,$http.post("/api/tunevote",$scope.formData).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to POST api");return"VOTE_DENIED"==response.data.message?void $scope.showToast1("Already voted"):($scope.showToast1("This tune has been voted!"),void($scope.formData.votes+=updown))})};var self=this;$http.get("/api/tunes").then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to GET api");console.log(response.status),$scope.tunes=response.data,$scope.count=$scope.tunes.length,self.isDisabled=!1,self.tunes=$scope.tunes,self.querySearch=$scope.querySearch,self.selectedItemChange=$scope.selectedItemChange,self.searchTextChange=$scope.searchTextChange,self.newState=$scope.newState,$scope.querySearch=function(query){var results=query?self.tunes.filter($scope.createFilterFor(query)):self.tunes;return results},$scope.selectedItemChange=function(item){if(console.log("selected item change"),"undefined"!=typeof item)return console.log("selected item change"),$scope.loadTune(item._id),$scope.searchText=item.tuneTitle,item.tuneTitle},$scope.createFilterFor=function(query){var lowercaseQuery=angular.lowercase(query);return function(tune){return 0===angular.lowercase(tune.tuneTitle).indexOf(lowercaseQuery)}}}),$http.get("/api/tunes/latest").then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to GET api");null!=response.data?($scope.formData=response.data,$scope.selectedTune=response.data._id,$scope.newTuneFlag=!1,$scope.getComments($scope.selectedTune)):$scope.newTuneFlag=!0}),$scope.addOrUpdateTune=function(){$scope.newTuneFlag?$scope.createTune():$scope.updateTune()},$scope.createTune=function(){$scope.formData.votes=0,$scope.formData.avatarSvg=$rootScope.avatarSvg,$http.defaults.headers.common.Authorization="Basic "+$scope.basicAuth,$http.post("/api/tunes",$scope.formData).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to POST api");$scope.tunes=response.data,self.tunes=$scope.tunes,$scope.count=$scope.tunes.length,$scope.announceClick('Your tune "'+$scope.formData.tuneTitle+'" has been added!'),$scope.showToast1($scope.formData.tuneTitle+" has been added!")}),$http.get("/api/tunes/mylatest").then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to GET api");$scope.formData=response.data,$scope.selectedTune=response.data._id,$scope.newTuneFlag=!1})},$scope.updateTune=function(){console.log("update Tune "+$scope.selectedTune),$http.defaults.headers.common.Authorization="Basic "+$scope.basicAuth,$http.put("/api/tunes/"+$scope.selectedTune,$scope.formData).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to POST api");$scope.showToast1($scope.formData.tuneTitle+" updated!")})},$scope.loadTune=function(tuneId){console.log("selected tune id is:"+tuneId),$http.get("/api/tunes/"+tuneId).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to GET api");$scope.formData=response.data[0],$scope.selectedTune=tuneId,$scope.getComments($scope.selectedTune),$scope.newTuneFlag=!1})},$scope.deleteTune=function($event){console.log("selected tune id is:"+$scope.selectedTune),$http.defaults.headers.common.Authorization="Basic "+$scope.basicAuth,$http.delete("/api/tunes/"+$scope.selectedTune).then(function(response){if("200"!=response.status)throw alert("get Error!"),new Error("Error during call to DELETE api");self.tunes.forEach(function(result,index){result._id===$scope.selectedTune&&self.tunes.splice(index,1)}),$scope.showToast1($scope.formData.tuneTitle+" has been removed!"),$scope.count=self.tunes.length,$scope.resetGrid(),$scope.formData.tuneTitle=null,$scope.formData.tuneAuthorName=null})},$scope.printIt=function(){var printableGrid=document.getElementById("printableGrid"),cssMainPage='<link rel="stylesheet" type="text/css" href="styles/main.css">',htmlToPrint='<style type="text/css"> table{width:100%;height:10%;} table, th, td {border: 3px solid black;padding: 15px; text-align: center;} tr{      min-height: 20px;      max-height: 20px;    } td{      min-width: 40px;      max-width: 40px;        } .tuneTitle{      font-family:"Comic Sans MS";  font-size:150%;} </style>';htmlToPrint+=cssMainPage+printableGrid.outerHTML;var newWin=$window.open("","","width=800, height=600");newWin.document.write(htmlToPrint),newWin.print()},$scope.showHelp=function(ev){$mdDialog.show({templateUrl:"../../views/helpvideo.html",parent:angular.element(document.body),targetEvent:ev,clickOutsideToClose:!0})},$scope.announceClick=function(msg){$mdDialog.show($mdDialog.alert().title("YouJazz").textContent(msg).ok("Ok!").targetEvent(originatorEv)),originatorEv=null},$scope.showDeleteConfirm=function(ev,msg){var confirm=$mdDialog.confirm().title(msg).textContent("This tune will be removed!").ariaLabel("Lucky day").targetEvent(ev).ok("Delete it!").cancel("Nevermind");$mdDialog.show(confirm).then(function(){$scope.deleteTune()},function(){return!1})},$scope.createPrompt1=function(ev,tuneTitle){if(void 0==$scope.userSignedIn||null==$scope.userSignedIn)return $scope.showToast1("You must login to create a new tune!"),void $location.url("login");var confirm=$mdDialog.prompt().title("Tune name").textContent("What is the name of the new tune?").placeholder("Tune name").ariaLabel("Tune name").initialValue(tuneTitle).targetEvent(ev).ok("Next").cancel("Nevermind");$mdDialog.show(confirm).then(function(result){$scope.formData.tuneTitle=result,$scope.createPrompt2(ev,tuneTitle)},function(){$scope.newTuneFlag=!1,$scope.formData.tuneTitle=""})},$scope.createPrompt2=function(ev,tuneTitle){var confirm=$mdDialog.prompt().title("Author name").textContent("What is the name of the composer?").placeholder("Author name").ariaLabel("Author name").initialValue("").targetEvent(ev).ok("Next").cancel("Nevermind");$mdDialog.show(confirm).then(function(result){$scope.formData.tuneAuthorName=result,$scope.newTune(tuneTitle)},function(){$scope.newTuneFlag=!1,$scope.formData.tuneTitle="",$scope.formData.tuneAuthorName=""})},$scope.showBuildGridDialog=function($event){function DialogController($scope,$mdDialog,items){$scope.items=items,$scope.closeDialog=function(){$mdDialog.hide()},$scope.buildGrid=function(){switch($scope.currentGridType){case"Intro":$scope.createIntroGrid();break;case"Outro":$scope.createOutroGrid();break;case"Chorus":$scope.createGrid();break;default:$scope.createGrid()}$mdDialog.hide()}}var parentEl=angular.element(document.body);$mdDialog.show({parent:parentEl,scope:$scope.$new(),targetEvent:$event,template:'<md-dialog aria-label="List dialog">  <md-dialog-content>  <h5 class="md-inform" style="padding:10px 10px;">Choose the grid type and size</h5>   <div layout="row" style="justify-content: center; padding-top:10px; padding-left:20px;padding-right:20px" layout-sm="column">      <md-radio-group layout="row"  ng-model="currentGridType" ng-init="currentGridType=\'Chorus\'">          <md-radio-button value="Intro" class="md-primary">Intro</md-radio-button>          <md-radio-button value="Chorus" class="md-primary"> Chorus </md-radio-button>          <md-radio-button value="Outro" class="md-primary" >Outro</md-radio-button>      </md-radio-group>   </div>  <div layout="row">   <md-slider-container layout="row" flex>    <input type="number" ng-init="formData.numRow=0"  placeholder="row" min="0" max="10" style="width:60px; border:none; padding-right:10px;" ng-model="formData.numRow" aria-label="volume" aria-controls="volume-slider">    <md-slider ng-model="formData.numRow" min="0" max="10" aria-label="volume" id="volume-slider" class="md-accent" style="padding-right:20px;" md-horizontal md-range></md-slider>   </md-slider-container>  </div>  <div layout="row">   <md-slider-container layout="row" flex>    <input type="number"  ng-init="formData.numCol=0" placeholder="col" min="0" max="10" style="width:60px; border:none; padding-right:10px;" ng-model="formData.numCol" aria-label="volume" aria-controls="volume-slider">    <md-slider ng-model="formData.numCol" min="0" max="10" aria-label="volume" id="volume-slider" class="md-accent" style="padding-right:20px;" md-horizontal md-range></md-slider>   </md-slider-container>  </div>  </md-dialog-content>  <md-dialog-actions>    <md-button ng-click="closeDialog()" class="md-primary">      Nervermind    </md-button>    <md-button ng-click="buildGrid()" class="md-primary">      Create!    </md-button>  </md-dialog-actions></md-dialog>',locals:{items:$scope.items},controller:DialogController})},void 0==$rootScope.userSignedIn&&$location.url("/signup")}]),angular.module("yeomanApp").controller("SignupCtrl",["$rootScope","$scope","$http","$mdToast","$document","$location","$base64","$cookies",function($rootScope,$scope,$http,$mdToast,$document,$location,$base64,$cookies){$scope.error="",$scope.password="",$scope.password2="",$scope.selectedAvatar="",$scope.mail="",$scope.showToast1=function(msg){$mdToast.show($mdToast.simple().textContent(msg).hideDelay(3e3))},$scope.username="",$scope.password="",$scope.registerUser=function(){if(0!=$scope.password.localeCompare($scope.password2))return void $scope.showToast1("Passwords don't match!");var encodedString="username="+encodeURIComponent($scope.username)+"&password="+encodeURIComponent($scope.password)+"&avatar="+encodeURIComponent($scope.selectedAvatar)+"&mail="+encodeURIComponent($scope.mail);$http({method:"POST",url:"api/users",data:encodedString,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).then(function(response){console.log("response status:"+JSON.stringify(response.status)),$scope.loginUser()},function(response){console.log("error  response status:"+JSON.stringify(response.status)),$scope.showToast1("Sorry, the username already exists. Please, choose another one")})},$scope.loginUser=function(){console.log("loginUser function start");var auth=$base64.encode(angular.lowercase($scope.username)+":"+$scope.password);$http.defaults.headers.common.Authorization="Basic "+auth,$rootScope.basicAuth=auth,$http.get("/api/users/"+$scope.username).then(function(response){console.log("response status:"+JSON.stringify(response.status));var res=response.data[0];$rootScope.userSignedIn=$scope.username,$rootScope.avatar=res.avatar;var login_today=new Date,login_expired=new Date(login_today);login_expired.setDate(login_today.getDate()+1),$cookies.put("youjazz_user",$rootScope.userSignedIn,{expires:login_expired}),$cookies.put("youjazz_basic_auth",$rootScope.basicAuth,{expires:login_expired}),$cookies.put("youjazz_user_avatar",res.avatar,{expires:login_expired}),$location.url("/")},function(response){console.log("error  response status:"+JSON.stringify(response.status)),$scope.showToast1("Error! Something went wrong... Retry registration again"),$rootScope.userSignedIn=null})}}]);